/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutCategoryIndexRouteImport } from './routes/_layout/category/index'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutCategoryIndexRoute = LayoutCategoryIndexRouteImport.update({
  id: '/category/',
  path: '/category/',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRoute
  '/': typeof LayoutIndexRoute
  '/category': typeof LayoutCategoryIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRoute
  '/': typeof LayoutIndexRoute
  '/category': typeof LayoutCategoryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/auth': typeof AuthRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/category/': typeof LayoutCategoryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/auth' | '/' | '/category'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/' | '/category'
  id: '__root__' | '/_layout' | '/auth' | '/_layout/' | '/_layout/category/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthRoute: typeof AuthRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/category/': {
      id: '/_layout/category/'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof LayoutCategoryIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutCategoryIndexRoute: typeof LayoutCategoryIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutCategoryIndexRoute: LayoutCategoryIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AuthRoute: AuthRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
